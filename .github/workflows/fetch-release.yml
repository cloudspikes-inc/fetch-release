# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Commit msg parsing
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.PAT_SECRET }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/cloudspikes-inc/fetch-release/commits/$GITHUB_SHA | jq -r '.commit.message' > gh_response.txt
          PROCESSING_DATA=$(cat gh_response.txt)
          echo commit msg: $PROCESSING_DATA
          DEVOPS_KEYWORD='DevOpsRelease'
          
          if [[ "$PROCESSING_DATA" == *"$DEVOPS_KEYWORD"* ]]; then
            echo $PROCESSING_DATA DevOps Release detected.

            echo $PROCESSING_DATA | sed 's/.*DevOpsRelease \(="[^"]*"\).*/\1/'
            python --version

            python commit_tag_extractor.py
            
            # awk -F'DevOpsRelease ' '{print $2}' gh_response.txt
            # sed 's/.*DevOpsRelease //' gh_response.txt
            # sed -i 's/DevOpsRelease ' gh_response.txt

            
            # grep -Po -- '$DEVOPS_KEYWORD \K[_\"[:alnum:]]*' <<< $PROCESSING_DATA
            # DEVOPS_TAG=$(grep -Po -- '$DEVOPS_KEYWORD \K[_\"[:alnum:]]*' <<< $PROCESSING_DATA)
            # echo DevOps Tag: $DEVOPS_TAG
          fi

      - name: Tag value validation checkpoint
        run: |

          if [ $(curl -LI -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.PAT_SECRET }}" -H "X-GitHub-Api-Version: 2022-11-28" -o /dev/null -w '%{http_code}\n' -s https://api.github.com/repos/cloudspikes-inc/child-repo-trigger/git/trees/${{ vars.DEVOPS_VERSION }}) == "200" ]; then
            echo -e "\e[1;32m ${{ vars.DEVOPS_VERSION }} DevOps Version tag exists. \e[0m"
          else
            echo -e "\e[1;31m ${{ vars.DEVOPS_VERSION }} is not a valid release or tag. \e[0m"
            exit 1
          fi

          echo successful execution.
          
          
